---
title: Sticky
layout: default_tpl.hbs
---
<section class="page-section">
    <div class="page-section-inner">

        <div class="use-column-group use-gutters-horizontal">
            <div class="use-size-80">
                <article class="rb-docu">
                    <h1 class="docu-title">{{ title }}</h1>
                    <p class="docu-intro">Component creates a sticky element, that can be stuck to the top or the bottom of the viewport. Optionally can animate child elements after it has become stuck according to the scroll position.</p>
                    <div class="is-sticky-parent">
{{#markdown}}
##Usage
To apply the sticky component add the `rb-sticky` class and attribute `data-module="sticky"` to an element you want to make sticky.
Top is the default position.

{{/markdown}}
                    <div class="docu-example is-demo">
                        <h3 class="docu-example-title">Demo</h3>
                        <div>
                            <div class="rb-sticky js-rb-life" data-module="sticky">
                                <div class="docu-item" style="height: 40px;">
                                    Sticky to the top
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="docu-example">
                        <h3 class="docu-example-title">Markup</h3>
{{#markdown}}
    <div class="rb-sticky js-rb-life" data-module="sticky">
        ...
    </div>
{{/markdown}}
                    </div>
                    {{> docu_js_life }}

                    <hr>

{{#markdown}}
##Positioning
Sticky makes its easy to change the sticky position. Positions can be changed with the addition of modifier classes.

For example: To create an element thats sticks to bottom, you can create the class `is-bottom` (`bottom: 0; top: auto;`) and add this class to the component container.
{{/markdown}}
                    <div class="docu-example is-demo">
                        <h3 class="docu-example-title">Demo</h3>
                        <div>
                            <div class="rb-sticky js-rb-life is-bottom" data-module="sticky">
                                <div class="docu-item" style="height: 40px;">
                                    Sticky to the bottom
                                </div>
                            </div>
                        </div>
                    </div>


{{#markdown}}
Or if you want to offset the element 150px from the top. Create a class, in this example it's `.is-top-150` and add it to the container.
{{/markdown}}
                    <div class="docu-example is-demo">
                        <h3 class="docu-example-title">Demo</h3>
                        <div>
                            <div class="rb-sticky js-rb-life is-top-150" data-module="sticky">
                                <div class="docu-item" style="height: 40px;">
                                    Sticky to the top with 150px offset.
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="docu-example">
                        <h3 class="docu-example-title">Markup</h3>
{{#markdown}}
    <!-- sticky element to bottom -->
    <div class="rb-sticky is-bottom js-rb-life" data-module="sticky">
        ...
    </div>

    <!-- sticky element to top offset 150px -->
    <div class="rb-sticky is-top-150 js-rb-life" data-module="sticky">
        ...
    </div>
{{/markdown}}
                    </div>
                    </div><!--end is-sticky-parent -->
                    <hr>


                </article><!-- end rb-docu -->
            </div>
        </div>

    </div>
</section>
